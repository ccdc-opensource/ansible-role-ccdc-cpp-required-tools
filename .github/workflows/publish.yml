name: Release to Ansible Galaxy
on:
  push:
    branches:
      - 'main'
env:
  filename: requirements.yml
  requirements-src: ccdc.cpp_required_tools
jobs:
  release:
    outputs:
      requirements-version: ${{ steps.tag_version.outputs.new_tag }}
      galaxy-name: ${{ steps.galaxy.outputs.name }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Get galaxy name
        id: galaxy
        run: |
          sudo snap install yq
          echo "name=$(yq eval '.galaxy_info.role_name' meta/main.yml)" >> GITHUB_OUTPUT
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''  # otherwise has a 'v'
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Release Ansible Role to Galaxy
        uses: hspaans/ansible-galaxy-action@v1
        with:
          api_key: ${{ secrets.galaxy_api_key }}
  update-build-requirements:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 
        with:
          repository: ccdc-confidential/build-systems-deployment-cpp-build-machines
          ref: ansible-provision  # for testing, change to development (or new staging branch) when complete
          token: ${{ secrets.GH_PAT }}
      - name: Update builds requirements yaml
        run: |
          sudo snap install yq
          yq eval -i '(.[] | select(.src == "${{ needs.release.outputs.galaxy-name }}")) .version |= "${{ needs.release.outputs.requirements-version }}"' ${{ env.filename }}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "[bot] Updating ${{ env.filename }} with latest ${{ env.requirements-version }} release NO_JIRA"
          branch: ${{ github.repository }}
          title: "[bot] Updating ${{ env.filename }} with latest ${{ env.requirements-version }} release"
